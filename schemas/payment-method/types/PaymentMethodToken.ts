/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PrimerApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const PaymentMethodToken: core.schemas.Schema<
  PaymentMethodToken.Raw,
  PrimerApi.paymentMethod.PaymentMethodToken
> = core.schemas
  .union("paymentMethodType", {
    PAYMENT_CARD: core.schemas.lazyObject(() => schemas.paymentMethod.PaymentCardTokenSchemaPaymentMethodsAPI),
    PAYPAL_BILLING_AGREEMENT: core.schemas.lazyObject(() => schemas.payments.PayPalBillingAgreementSchema),
    GOCARDLESS_MANDATE: core.schemas.lazyObject(() => schemas.payments.GoCardlessMandateSchema),
    KLARNA_CUSTOMER_TOKEN: core.schemas.lazyObject(() => schemas.payments.KlarnaCustomerTokenSchema),
    APAYA_CUSTOMER_TOKEN: core.schemas.lazyObject(() => schemas.payments.ApayaCustomerTokenSchema),
  })
  .transform<PrimerApi.paymentMethod.PaymentMethodToken>({
    parse: (value) => {
      switch (value.paymentMethodType) {
        case "PAYMENT_CARD": {
          return PrimerApi.paymentMethod.PaymentMethodToken.paymentCard(value);
        }
        case "PAYPAL_BILLING_AGREEMENT": {
          return PrimerApi.paymentMethod.PaymentMethodToken.paypalBillingAgreement(value);
        }
        case "GOCARDLESS_MANDATE": {
          return PrimerApi.paymentMethod.PaymentMethodToken.gocardlessMandate(value);
        }
        case "KLARNA_CUSTOMER_TOKEN": {
          return PrimerApi.paymentMethod.PaymentMethodToken.klarnaCustomerToken(value);
        }
        case "APAYA_CUSTOMER_TOKEN": {
          return PrimerApi.paymentMethod.PaymentMethodToken.apayaCustomerToken(value);
        }
        default: {
          return {
            ...(value as any),
            _visit: (visitor) => visitor._other(value),
          };
        }
      }
    },
    json: (value) => value as any,
  });

export declare namespace PaymentMethodToken {
  type Raw =
    | PaymentMethodToken.PaymentCard
    | PaymentMethodToken.PaypalBillingAgreement
    | PaymentMethodToken.GocardlessMandate
    | PaymentMethodToken.KlarnaCustomerToken
    | PaymentMethodToken.ApayaCustomerToken;

  interface PaymentCard extends schemas.paymentMethod.PaymentCardTokenSchemaPaymentMethodsAPI.Raw {
    paymentMethodType: "PAYMENT_CARD";
  }

  interface PaypalBillingAgreement extends schemas.payments.PayPalBillingAgreementSchema.Raw {
    paymentMethodType: "PAYPAL_BILLING_AGREEMENT";
  }

  interface GocardlessMandate extends schemas.payments.GoCardlessMandateSchema.Raw {
    paymentMethodType: "GOCARDLESS_MANDATE";
  }

  interface KlarnaCustomerToken extends schemas.payments.KlarnaCustomerTokenSchema.Raw {
    paymentMethodType: "KLARNA_CUSTOMER_TOKEN";
  }

  interface ApayaCustomerToken extends schemas.payments.ApayaCustomerTokenSchema.Raw {
    paymentMethodType: "APAYA_CUSTOMER_TOKEN";
  }
}
