/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PrimerApi } from "../../..";
import * as core from "../../../core";

export const SupportedPaymentMethods: core.schemas.Schema<
  SupportedPaymentMethods.Raw,
  PrimerApi.commons.SupportedPaymentMethods
> = core.schemas.string().transform<PrimerApi.commons.SupportedPaymentMethods>({
  parse: (value) => {
    switch (value) {
      case "PAYMENT_CARD": {
        return PrimerApi.commons.SupportedPaymentMethods.PaymentCard;
      }
      case "GOOGLE_PAY": {
        return PrimerApi.commons.SupportedPaymentMethods.GooglePay;
      }
      case "APPLE_PAY": {
        return PrimerApi.commons.SupportedPaymentMethods.ApplePay;
      }
      case "PAYPAL": {
        return PrimerApi.commons.SupportedPaymentMethods.Paypal;
      }
      case "GOCARDLESS": {
        return PrimerApi.commons.SupportedPaymentMethods.Gocardless;
      }
      case "KLARNA": {
        return PrimerApi.commons.SupportedPaymentMethods.Klarna;
      }
      case "APAYA": {
        return PrimerApi.commons.SupportedPaymentMethods.Apaya;
      }
      case "HOOLAH": {
        return PrimerApi.commons.SupportedPaymentMethods.Hoolah;
      }
      case "ATOME": {
        return PrimerApi.commons.SupportedPaymentMethods.Atome;
      }
      case "PAY_NL_IDEAL": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlIdeal;
      }
      case "PAY_NL_BANCONTACT": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlBancontact;
      }
      case "PAY_NL_DIRECT_DEBIT": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlDirectDebit;
      }
      case "PAY_NL_SOFORT_BANKING": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlSofortBanking;
      }
      case "PAY_NL_PAYPAL": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlPaypal;
      }
      case "PAY_NL_PAYCONIQ": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlPayconiq;
      }
      case "PAY_NL_GIROPAY": {
        return PrimerApi.commons.SupportedPaymentMethods.PayNlGiropay;
      }
      case "ADYEN_SOFORT": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenSofort;
      }
      case "ADYEN_TWINT": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenTwint;
      }
      case "ADYEN_GIROPAY": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenGiropay;
      }
      case "ADYEN_TRUSTLY": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenTrustly;
      }
      case "ADYEN_ALIPAY": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenAlipay;
      }
      case "ADYEN_MOBILEPAY": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenMobilepay;
      }
      case "ADYEN_VIPPS": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenVipps;
      }
      case "ADYEN_DOTPAY": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenDotpay;
      }
      case "ADYEN_IDEAL": {
        return PrimerApi.commons.SupportedPaymentMethods.AdyenIdeal;
      }
      case "MOLLIE_IDEAL": {
        return PrimerApi.commons.SupportedPaymentMethods.MollieIdeal;
      }
      case "MOLLIE_BANCONTACT": {
        return PrimerApi.commons.SupportedPaymentMethods.MollieBancontact;
      }
      case "BUCKAROO_IDEAL": {
        return PrimerApi.commons.SupportedPaymentMethods.BuckarooIdeal;
      }
      case "BUCKAROO_BANCONTACT": {
        return PrimerApi.commons.SupportedPaymentMethods.BuckarooBancontact;
      }
      case "BUCKAROO_SOFORT": {
        return PrimerApi.commons.SupportedPaymentMethods.BuckarooSofort;
      }
      case "BUCKAROO_GIROPAY": {
        return PrimerApi.commons.SupportedPaymentMethods.BuckarooGiropay;
      }
      case "BUCKAROO_EPS": {
        return PrimerApi.commons.SupportedPaymentMethods.BuckarooEps;
      }
      case "XFERS_PAYNOW": {
        return PrimerApi.commons.SupportedPaymentMethods.XfersPaynow;
      }
      default: {
        return {
          value: value,
          visit: (visitor) => visitor._other(value),
        };
      }
    }
  },
  json: (value) => value.value,
});

export declare namespace SupportedPaymentMethods {
  type Raw = string;
}
