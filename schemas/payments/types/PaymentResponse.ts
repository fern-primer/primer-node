/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PrimerApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const PaymentResponse: core.schemas.ObjectSchema<PaymentResponse.Raw, PrimerApi.payments.PaymentResponse> =
  core.schemas.object({
    id: core.schemas.lazy(() => schemas.payments.PaymentId).optional(),
    date: core.schemas.date().optional(),
    status: core.schemas.lazy(() => schemas.payments.PaymentStatus).optional(),
    orderId: core.schemas.lazy(() => schemas.commons.OrderId).optional(),
    customerId: core.schemas.string().optional(),
    currencyCode: core.schemas.lazy(() => schemas.commons.CurrencyCode).optional(),
    amount: core.schemas.number().optional(),
    order: core.schemas.lazyObject(() => schemas.clientSession.CustomerDetails).optional(),
    countryCode: core.schemas.lazy(() => schemas.commons.CountryCode).optional(),
    fees: core.schemas.list(core.schemas.lazyObject(() => schemas.clientSession.Fee)).optional(),
    shipping: core.schemas.lazyObject(() => schemas.clientSession.ShippingDetails).optional(),
    paymentMethod: core.schemas.lazy(() => schemas.payments.PaymentMethod),
    requiredAction: core.schemas.lazyObject(() => schemas.payments.RequiredAction).optional(),
    statusReason: core.schemas.lazyObject(() => schemas.payments.StatusReason).optional(),
    transactions: core.schemas.list(core.schemas.lazyObject(() => schemas.payments.Transaction)),
    processor: core.schemas.lazyObject(() => schemas.payments.Processor).optional(),
    customer: core.schemas.lazyObject(() => schemas.clientSession.CustomerDetails).optional(),
    metadata: core.schemas.record(core.schemas.string(), core.schemas.unknown()).optional(),
  });

export declare namespace PaymentResponse {
  interface Raw {
    id?: schemas.payments.PaymentId.Raw | null;
    date?: string | null;
    status?: schemas.payments.PaymentStatus.Raw | null;
    orderId?: schemas.commons.OrderId.Raw | null;
    customerId?: string | null;
    currencyCode?: schemas.commons.CurrencyCode.Raw | null;
    amount?: number | null;
    order?: schemas.clientSession.CustomerDetails.Raw | null;
    countryCode?: schemas.commons.CountryCode.Raw | null;
    fees?: schemas.clientSession.Fee.Raw[] | null;
    shipping?: schemas.clientSession.ShippingDetails.Raw | null;
    paymentMethod: schemas.payments.PaymentMethod.Raw;
    requiredAction?: schemas.payments.RequiredAction.Raw | null;
    statusReason?: schemas.payments.StatusReason.Raw | null;
    transactions: schemas.payments.Transaction.Raw[];
    processor?: schemas.payments.Processor.Raw | null;
    customer?: schemas.clientSession.CustomerDetails.Raw | null;
    metadata?: Record<string, unknown> | null;
  }
}
