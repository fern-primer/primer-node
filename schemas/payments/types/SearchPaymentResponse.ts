/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PrimerApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const SearchPaymentResponse: core.schemas.ObjectSchema<
  SearchPaymentResponse.Raw,
  PrimerApi.payments.SearchPaymentResponse
> = core.schemas.object({
  id: core.schemas.lazy(() => schemas.payments.PaymentId),
  date: core.schemas.date(),
  status: core.schemas.lazy(() => schemas.payments.PaymentStatus),
  orderId: core.schemas.lazy(() => schemas.commons.OrderId),
  processor: core.schemas.lazyObject(() => schemas.payments.Processor).optional(),
  currencyCode: core.schemas.lazy(() => schemas.commons.CurrencyCode),
  amount: core.schemas.number(),
  metadata: core.schemas.record(core.schemas.string(), core.schemas.unknown()).optional(),
});

export declare namespace SearchPaymentResponse {
  interface Raw {
    id: schemas.payments.PaymentId.Raw;
    date: string;
    status: schemas.payments.PaymentStatus.Raw;
    orderId: schemas.commons.OrderId.Raw;
    processor?: schemas.payments.Processor.Raw | null;
    currencyCode: schemas.commons.CurrencyCode.Raw;
    amount: number;
    metadata?: Record<string, unknown> | null;
  }
}
