/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { PrimerPrimerApi } from "@fern-api/primer";
import * as core from "../../../core";

export const SearchPaymentResponse: core.schemas.ObjectSchema<
  serializers.SearchPaymentResponse.Raw,
  PrimerPrimerApi.SearchPaymentResponse
> = core.schemas.object({
  id: core.schemas.lazy(async () => (await import("../..")).PaymentId),
  date: core.schemas.date(),
  status: core.schemas.lazy(async () => (await import("../..")).PaymentStatus),
  orderId: core.schemas.lazy(async () => (await import("../..")).OrderId),
  processor: core.schemas.lazyObject(async () => (await import("../..")).Processor).optional(),
  currencyCode: core.schemas.lazy(async () => (await import("../..")).CurrencyCode),
  amount: core.schemas.number(),
  metadata: core.schemas.record(core.schemas.string(), core.schemas.unknown()).optional(),
});

export declare namespace SearchPaymentResponse {
  interface Raw {
    id: serializers.PaymentId.Raw;
    date: string;
    status: serializers.PaymentStatus.Raw;
    orderId: serializers.OrderId.Raw;
    processor?: serializers.Processor.Raw | null;
    currencyCode: serializers.CurrencyCode.Raw;
    amount: number;
    metadata?: Record<string, unknown> | null;
  }
}
