/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { PrimerPrimerApi } from "@fern-api/primer";
import * as core from "../../../core";

export const KlarnaSessionDetails: core.schemas.ObjectSchema<
  serializers.KlarnaSessionDetails.Raw,
  PrimerPrimerApi.KlarnaSessionDetails
> = core.schemas.object({
  recurringDescription: core.schemas.string().optional(),
  billingAddress: core.schemas.lazyObject(async () => (await import("../..")).KlarnaAddress),
  shippingAddress: core.schemas.lazyObject(async () => (await import("../..")).KlarnaAddress).optional(),
  purchaseCountry: core.schemas.string(),
  purchaseCurrency: core.schemas.string(),
  locale: core.schemas.string(),
  orderLines: core.schemas.list(core.schemas.unknown()),
  tokenDetails: core.schemas.lazyObject(async () => (await import("../..")).KlarnaTokenDetails).optional(),
});

export declare namespace KlarnaSessionDetails {
  interface Raw {
    recurringDescription?: string | null;
    billingAddress: serializers.KlarnaAddress.Raw;
    shippingAddress?: serializers.KlarnaAddress.Raw | null;
    purchaseCountry: string;
    purchaseCurrency: string;
    locale: string;
    orderLines: unknown[];
    tokenDetails?: serializers.KlarnaTokenDetails.Raw | null;
  }
}
