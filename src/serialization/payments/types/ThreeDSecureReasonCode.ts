/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { PrimerPrimerApi } from "@fern-api/primer";
import * as core from "../../../core";

export const ThreeDSecureReasonCode: core.schemas.Schema<
  serializers.ThreeDSecureReasonCode.Raw,
  PrimerPrimerApi.ThreeDSecureReasonCode
> = core.schemas
  .union("type", {
    Skipped: core.schemas.object({
      value: core.schemas.lazy(async () => (await import("../..")).ThreeDSecureSkippedReasonCodeEnum),
    }),
    Failed: core.schemas.object({
      value: core.schemas.lazy(async () => (await import("../..")).ThreeDSecureFailedReasonCodeEnum),
    }),
  })
  .transform<PrimerPrimerApi.ThreeDSecureReasonCode>({
    parse: (value) => {
      switch (value.type) {
        case "Skipped":
          return PrimerPrimerApi.ThreeDSecureReasonCode.skipped(value.value);
        case "Failed":
          return PrimerPrimerApi.ThreeDSecureReasonCode.failed(value.value);
        default:
          return PrimerPrimerApi.ThreeDSecureReasonCode._unknown(value);
      }
    },
    json: (value) => value as any,
  });

export declare namespace ThreeDSecureReasonCode {
  type Raw = ThreeDSecureReasonCode.Skipped | ThreeDSecureReasonCode.Failed;

  interface Skipped {
    type: "Skipped";
    value: serializers.ThreeDSecureSkippedReasonCodeEnum.Raw;
  }

  interface Failed {
    type: "Failed";
    value: serializers.ThreeDSecureFailedReasonCodeEnum.Raw;
  }
}
