/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { PrimerPrimerApi } from "@fern-api/primer";
import * as core from "../../../core";

export const PaymentResponse: core.schemas.ObjectSchema<
  serializers.PaymentResponse.Raw,
  PrimerPrimerApi.PaymentResponse
> = core.schemas.object({
  id: core.schemas.lazy(async () => (await import("../..")).PaymentId).optional(),
  date: core.schemas.date().optional(),
  status: core.schemas.lazy(async () => (await import("../..")).PaymentStatus).optional(),
  orderId: core.schemas.lazy(async () => (await import("../..")).OrderId).optional(),
  customerId: core.schemas.string().optional(),
  currencyCode: core.schemas.lazy(async () => (await import("../..")).CurrencyCode).optional(),
  amount: core.schemas.number().optional(),
  order: core.schemas.lazyObject(async () => (await import("../..")).CustomerDetails).optional(),
  countryCode: core.schemas.lazy(async () => (await import("../..")).CountryCode).optional(),
  fees: core.schemas.list(core.schemas.lazyObject(async () => (await import("../..")).Fee)).optional(),
  shipping: core.schemas.lazyObject(async () => (await import("../..")).ShippingDetails).optional(),
  paymentMethod: core.schemas.lazy(async () => (await import("../..")).PaymentMethod),
  requiredAction: core.schemas.lazyObject(async () => (await import("../..")).RequiredAction).optional(),
  statusReason: core.schemas.lazyObject(async () => (await import("../..")).StatusReason).optional(),
  transactions: core.schemas.list(core.schemas.lazyObject(async () => (await import("../..")).Transaction)),
  processor: core.schemas.lazyObject(async () => (await import("../..")).Processor).optional(),
  customer: core.schemas.lazyObject(async () => (await import("../..")).CustomerDetails).optional(),
  metadata: core.schemas.record(core.schemas.string(), core.schemas.unknown()).optional(),
});

export declare namespace PaymentResponse {
  interface Raw {
    id?: serializers.PaymentId.Raw | null;
    date?: string | null;
    status?: serializers.PaymentStatus.Raw | null;
    orderId?: serializers.OrderId.Raw | null;
    customerId?: string | null;
    currencyCode?: serializers.CurrencyCode.Raw | null;
    amount?: number | null;
    order?: serializers.CustomerDetails.Raw | null;
    countryCode?: serializers.CountryCode.Raw | null;
    fees?: serializers.Fee.Raw[] | null;
    shipping?: serializers.ShippingDetails.Raw | null;
    paymentMethod: serializers.PaymentMethod.Raw;
    requiredAction?: serializers.RequiredAction.Raw | null;
    statusReason?: serializers.StatusReason.Raw | null;
    transactions: serializers.Transaction.Raw[];
    processor?: serializers.Processor.Raw | null;
    customer?: serializers.CustomerDetails.Raw | null;
    metadata?: Record<string, unknown> | null;
  }
}
