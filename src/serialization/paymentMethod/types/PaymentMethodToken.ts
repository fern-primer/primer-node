/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { PrimerPrimerApi } from "@fern-api/primer";
import * as core from "../../../core";

export const PaymentMethodToken: core.schemas.Schema<
  serializers.PaymentMethodToken.Raw,
  PrimerPrimerApi.PaymentMethodToken
> = core.schemas
  .union("paymentMethodType", {
    PAYMENT_CARD: core.schemas.lazyObject(async () => (await import("../..")).PaymentCardTokenSchemaPaymentMethodsApi),
    PAYPAL_BILLING_AGREEMENT: core.schemas.lazyObject(async () => (await import("../..")).PayPalBillingAgreementSchema),
    GOCARDLESS_MANDATE: core.schemas.lazyObject(async () => (await import("../..")).GoCardlessMandateSchema),
    KLARNA_CUSTOMER_TOKEN: core.schemas.lazyObject(async () => (await import("../..")).KlarnaCustomerTokenSchema),
    APAYA_CUSTOMER_TOKEN: core.schemas.lazyObject(async () => (await import("../..")).ApayaCustomerTokenSchema),
  })
  .transform<PrimerPrimerApi.PaymentMethodToken>({
    parse: (value) => {
      switch (value.paymentMethodType) {
        case "PAYMENT_CARD":
          return PrimerPrimerApi.PaymentMethodToken.paymentCard(value);
        case "PAYPAL_BILLING_AGREEMENT":
          return PrimerPrimerApi.PaymentMethodToken.paypalBillingAgreement(value);
        case "GOCARDLESS_MANDATE":
          return PrimerPrimerApi.PaymentMethodToken.gocardlessMandate(value);
        case "KLARNA_CUSTOMER_TOKEN":
          return PrimerPrimerApi.PaymentMethodToken.klarnaCustomerToken(value);
        case "APAYA_CUSTOMER_TOKEN":
          return PrimerPrimerApi.PaymentMethodToken.apayaCustomerToken(value);
        default:
          return PrimerPrimerApi.PaymentMethodToken._unknown(value);
      }
    },
    json: (value) => value as any,
  });

export declare namespace PaymentMethodToken {
  type Raw =
    | PaymentMethodToken.PaymentCard
    | PaymentMethodToken.PaypalBillingAgreement
    | PaymentMethodToken.GocardlessMandate
    | PaymentMethodToken.KlarnaCustomerToken
    | PaymentMethodToken.ApayaCustomerToken;

  interface PaymentCard extends serializers.PaymentCardTokenSchemaPaymentMethodsApi.Raw {
    paymentMethodType: "PAYMENT_CARD";
  }

  interface PaypalBillingAgreement extends serializers.PayPalBillingAgreementSchema.Raw {
    paymentMethodType: "PAYPAL_BILLING_AGREEMENT";
  }

  interface GocardlessMandate extends serializers.GoCardlessMandateSchema.Raw {
    paymentMethodType: "GOCARDLESS_MANDATE";
  }

  interface KlarnaCustomerToken extends serializers.KlarnaCustomerTokenSchema.Raw {
    paymentMethodType: "KLARNA_CUSTOMER_TOKEN";
  }

  interface ApayaCustomerToken extends serializers.ApayaCustomerTokenSchema.Raw {
    paymentMethodType: "APAYA_CUSTOMER_TOKEN";
  }
}
