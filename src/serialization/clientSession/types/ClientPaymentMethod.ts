/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { PrimerPrimerApi } from "@fern-api/primer";
import * as core from "../../../core";

export const ClientPaymentMethod: core.schemas.ObjectSchema<
  serializers.ClientPaymentMethod.Raw,
  PrimerPrimerApi.ClientPaymentMethod
> = core.schemas.object({
  vaultOnSuccess: core.schemas.boolean().optional(),
  descriptor: core.schemas.string().optional(),
  paymentType: core.schemas.lazy(async () => (await import("../..")).PaymentType).optional(),
  options: core.schemas
    .record(
      core.schemas.lazy(async () => (await import("../..")).SupportedPaymentMethods),
      core.schemas.lazyObject(async () => (await import("../..")).NetworkOrSurchargeObject)
    )
    .optional(),
});

export declare namespace ClientPaymentMethod {
  interface Raw {
    vaultOnSuccess?: boolean | null;
    descriptor?: string | null;
    paymentType?: serializers.PaymentType.Raw | null;
    options?: Record<serializers.SupportedPaymentMethods.Raw, serializers.NetworkOrSurchargeObject.Raw> | null;
  }
}
