/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface StatusReasonType<RawValue extends StatusReasonType.RawValue = StatusReasonType.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: StatusReasonType._Visitor<Result>) => Result;
}

const _ApplicationError: StatusReasonType<"APPLICATION_ERROR"> = {
  value: "APPLICATION_ERROR",
  visit: (visitor) => visitor.applicationError(),
};
const _GatewayRejected: StatusReasonType<"GATEWAY_REJECTED"> = {
  value: "GATEWAY_REJECTED",
  visit: (visitor) => visitor.gatewayRejected(),
};
const _IssuerDeclined: StatusReasonType<"ISSUER_DECLINED"> = {
  value: "ISSUER_DECLINED",
  visit: (visitor) => visitor.issuerDeclined(),
};
export const StatusReasonType = {
  ApplicationError: _ApplicationError,
  GatewayRejected: _GatewayRejected,
  IssuerDeclined: _IssuerDeclined,
} as const;

export declare namespace StatusReasonType {
  type RawValue = "APPLICATION_ERROR" | "GATEWAY_REJECTED" | "ISSUER_DECLINED" | string;

  interface _Visitor<Result> {
    applicationError: () => Result;
    gatewayRejected: () => Result;
    issuerDeclined: () => Result;
    _other: (value: string) => Result;
  }
}
