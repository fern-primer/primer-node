/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface ProductUsageType<RawValue extends ProductUsageType.RawValue = ProductUsageType.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: ProductUsageType._Visitor<Result>) => Result;
}

const _Consumer: ProductUsageType<"CONSUMER"> = {
  value: "CONSUMER",
  visit: (visitor) => visitor.consumer(),
};
const _Business: ProductUsageType<"BUSINESS"> = {
  value: "BUSINESS",
  visit: (visitor) => visitor.business(),
};
const _Government: ProductUsageType<"GOVERNMENT"> = {
  value: "GOVERNMENT",
  visit: (visitor) => visitor.government(),
};
const _Unknown: ProductUsageType<"UNKNOWN"> = {
  value: "UNKNOWN",
  visit: (visitor) => visitor.unknown(),
};
export const ProductUsageType = {
  Consumer: _Consumer,
  Business: _Business,
  Government: _Government,
  Unknown: _Unknown,
} as const;

export declare namespace ProductUsageType {
  type RawValue = "CONSUMER" | "BUSINESS" | "GOVERNMENT" | "UNKNOWN" | string;

  interface _Visitor<Result> {
    consumer: () => Result;
    business: () => Result;
    government: () => Result;
    unknown: () => Result;
    _other: (value: string) => Result;
  }
}
