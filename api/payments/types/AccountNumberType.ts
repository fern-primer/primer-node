/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface AccountNumberType<RawValue extends AccountNumberType.RawValue = AccountNumberType.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: AccountNumberType._Visitor<Result>) => Result;
}

const _PrimaryAccountNumber: AccountNumberType<"PRIMARY_ACCOUNT_NUMBER"> = {
  value: "PRIMARY_ACCOUNT_NUMBER",
  visit: (visitor) => visitor.primaryAccountNumber(),
};
const _NetworkToken: AccountNumberType<"NETWORK_TOKEN"> = {
  value: "NETWORK_TOKEN",
  visit: (visitor) => visitor.networkToken(),
};
const _Unknown: AccountNumberType<"UNKNOWN"> = {
  value: "UNKNOWN",
  visit: (visitor) => visitor.unknown(),
};
export const AccountNumberType = {
  PrimaryAccountNumber: _PrimaryAccountNumber,
  NetworkToken: _NetworkToken,
  Unknown: _Unknown,
  _parse: (value: string): AccountNumberType => {
    switch (value) {
      case "PRIMARY_ACCOUNT_NUMBER": {
        return _PrimaryAccountNumber;
      }
      case "NETWORK_TOKEN": {
        return _NetworkToken;
      }
      case "UNKNOWN": {
        return _Unknown;
      }
      default: {
        return {
          value: value as AccountNumberType.RawValue,
          visit: (visitor) => visitor._other(value),
        };
      }
    }
  },
} as const;

export declare namespace AccountNumberType {
  type RawValue = "PRIMARY_ACCOUNT_NUMBER" | "NETWORK_TOKEN" | "UNKNOWN";

  interface _Visitor<Result> {
    primaryAccountNumber: () => Result;
    networkToken: () => Result;
    unknown: () => Result;
    _other: (value: string) => Result;
  }
}
