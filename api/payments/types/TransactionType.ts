/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface TransactionType<RawValue extends TransactionType.RawValue = TransactionType.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: TransactionType._Visitor<Result>) => Result;
}

const _Sale: TransactionType<"SALE"> = {
  value: "SALE",
  visit: (visitor) => visitor.sale(),
};
const _Refund: TransactionType<"REFUND"> = {
  value: "REFUND",
  visit: (visitor) => visitor.refund(),
};
export const TransactionType = {
  Sale: _Sale,
  Refund: _Refund,
} as const;

export declare namespace TransactionType {
  type RawValue = "SALE" | "REFUND" | string;

  interface _Visitor<Result> {
    sale: () => Result;
    refund: () => Result;
    _other: (value: string) => Result;
  }
}
