/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface RegionalRestriction<RawValue extends RegionalRestriction.RawValue = RegionalRestriction.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: RegionalRestriction._Visitor<Result>) => Result;
}

const _DomesticUseOnly: RegionalRestriction<"DOMESTIC_USE_ONLY"> = {
  value: "DOMESTIC_USE_ONLY",
  visit: (visitor) => visitor.domesticUseOnly(),
};
const _None: RegionalRestriction<"NONE"> = {
  value: "NONE",
  visit: (visitor) => visitor.none(),
};
const _Unknown: RegionalRestriction<"UNKNOWN"> = {
  value: "UNKNOWN",
  visit: (visitor) => visitor.unknown(),
};
export const RegionalRestriction = {
  DomesticUseOnly: _DomesticUseOnly,
  None: _None,
  Unknown: _Unknown,
} as const;

export declare namespace RegionalRestriction {
  type RawValue = "DOMESTIC_USE_ONLY" | "NONE" | "UNKNOWN" | string;

  interface _Visitor<Result> {
    domesticUseOnly: () => Result;
    none: () => Result;
    unknown: () => Result;
    _other: (value: string) => Result;
  }
}
